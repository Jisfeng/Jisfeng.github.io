<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jisfeng</title><link>https://jisfeng.github.io/</link><description>Recent content on Jisfeng</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 23 Jan 2022 14:19:16 +0800</lastBuildDate><atom:link href="https://jisfeng.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode之链表题总结</title><link>https://jisfeng.github.io/posts/24fd7290.html/</link><pubDate>Sun, 23 Jan 2022 14:19:16 +0800</pubDate><guid>https://jisfeng.github.io/posts/24fd7290.html/</guid><description>概述 本文是个人对Leetcode上链表题目的总结。
题目类型 链表拼接 链表拼接，对于头结点不会变化的情况下，可以直接拼接，比如题目[旋转链表]。而对于头结点可能变化，则通常需要设置一个哑结点dummy，将需要的结点拼接到这个哑结点之后，最后返回dummy.next即可。
代码 // 示例，两数相加 public ListNode addTwoNumbers(ListNode l1, ListNode l2) { ListNode dummy = new ListNode(0); ListNode curr = dummy; int incr = 0; while (l1 != null || l2 != null) { if (l1 != null) { incr += l1.val; l1 = l1.next; } if (l2 != null) { incr += l2.val; l2 = l2.next; } curr.next = new ListNode(incr % 10); curr = curr.</description></item></channel></rss>